# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_resetJobStats
    rt::HARTNDb_resetSystemStats
    rt::HARTNDb_startSystemStats
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/mips_cpu/.Xil/Vivado-16924-BCC4/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file delete -force $::env(RT_TMP)
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    rt::set_parameter datapathDensePacking false
    set rt::partid xc7a100tcsg324-1
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib

    set rt::useElabCache false
    if {$rt::useElabCache == false} {
      rt::read_verilog {
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/circuit/ALU.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE_10_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE_5_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE_6_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE_7_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE_8_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE_9_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/AND_GATE_BUS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/arithmetic/Adder.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/wiring/Bit_Extender_12_32_SIGN.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/wiring/Bit_Extender_20_32_SIGN.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/wiring/Bit_Extender_8_32.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/arithmetic/Comparator.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/io/Counter.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/io/FPGADigit.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/base/LogisimClockComponent.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/mips_cpu/mips_cpu.srcs/sources_1/new/LogisimCounter.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/base/LogisimTickGenerator.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/plexers/Multiplexer_16.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/plexers/Multiplexer_bus_16.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/plexers/Multiplexer_bus_2.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/plexers/Multiplexer_bus_4.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/NOR_GATE_BUS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/NOT_GATE.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE_10_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE_11_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE_14_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE_3_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE_6_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE_7_INPUTS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/OR_GATE_BUS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/memory/RAM_Data_RAM.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/memory/REGISTER_FLIP_FLOP.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/memory/REGISTER_FLIP_FLOP_PC.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/memory/ROM_Order_ROM.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/arithmetic/Shifter_32_bit.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/arithmetic/Subtractor.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/gates/XOR_GATE_BUS.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/circuit/arithmetic_controller.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/io/decoder3_8.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/io/display_sel.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/io/divider.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/circuit/hardwired_controller.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/mips_cpu/mips_cpu.srcs/sources_1/new/regfile1.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/io/sevenseg_dec.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/circuit/signal_generator.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/circuit/single_cycle_riscv.v
      C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/verilog/toplevel/LogisimToplevelShell.v
    }
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification false
    set rt::top LogisimToplevelShell
    rt::set_parameter enableIncremental true
    rt::set_parameter markDebugPreservationLevel "enable"
    set rt::reportTiming false
    rt::set_parameter elaborateOnly true
    rt::set_parameter elaborateRtl true
    rt::set_parameter eliminateRedundantBitOperator false
    rt::set_parameter elaborateRtlOnlyFlow true
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter merge_flipflops true
    rt::set_parameter srlDepthThreshold 3
    rt::set_parameter rstSrlDepthThreshold 4
# MODE: 
    rt::set_parameter webTalkPath {}
    rt::set_parameter synthDebugLog false
    rt::set_parameter printModuleName false
    rt::set_parameter enableSplitFlowPath "C:/Users/honghongyu/verilog/remake/cpu21-riscv/single_cycle_riscv/mips_cpu/.Xil/Vivado-16924-BCC4/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_rtlelab -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
